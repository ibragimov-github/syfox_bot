const TelegramApi = require('node-telegram-bot-api');
require('dotenv').config();

const bot = new TelegramApi(process.env.BOT_TOKEN, { polling: true });
bot.setMyCommands([
  {
    command: '/start',
    description: '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞'
  }
])
let result = {}
const optionsContact = {
  reply_markup: JSON.stringify({
    inline_keyboard: [
      [{ text: '–ø–æ–∑–≤–æ–Ω–∏—Ç–µ', callback_data: 'callme' }], [{ text: '–Ω–∞–ø–∏—à–∏—Ç–µ –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä', callback_data: 'textme' }]
    ]
  })
}
const optionsMessage = {
  reply_markup: JSON.stringify({
    inline_keyboard: [
      [{ text: 'WhatsApp', callback_data: 'whatsapp' }], [{ text: 'Telegram', callback_data: 'telegram' }]
    ]
  })
}
bot.on('message', async msg => {
  const messageText = msg.text;
  const resultChatId = '-1001773406853'
  if (!(msg.chat.id in result)) {
    result[msg.chat.id] = {
      name: 'expects...',
      phoneNumber: '',
      howContact: {
        phone: '',
        messenger: ''
      },
      finalquestion: '',
      formCompleted: false
    }
  }
  if (msg.chat.type === 'private') {
    if (messageText === '/start') {
      result[msg.chat.id] = {
        name: 'expects...',
        phoneNumber: '',
        howContact: {
          phone: '',
          messenger: ''
        },
        finalquestion: '',
        formCompleted: false
      }
      await bot.sendMessage(msg.chat.id, `Hey, guys! \n \n–≠—Ç–æ seyfox_bot, –æ–Ω –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã. \n \nEnjoy üòâ`)
      return bot.sendMessage(msg.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è')
    }

    if (result[msg.chat.id].name === 'expects...') {
      result[msg.chat.id].name = messageText;
      return bot.sendMessage(msg.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä');
    }
    if (result[msg.chat.id].name.length && !result[msg.chat.id].phoneNumber.length) {
      result[msg.chat.id].phoneNumber = messageText;
      return bot.sendMessage(msg.chat.id, '–ö–∞–∫ –≤–∞–º —É–¥–æ–±–Ω–µ–µ, —á—Ç–æ–±—ã –º—ã —Å –≤–∞–º–∏ —Å–≤—è–∑–∞–ª–∏—Å—å ?', optionsContact)
    }
    if (!(result[msg.chat.id].formCompleted) && result[msg.chat.id].howContact.phone || !!result[msg.chat.id].howContact.messenger.length && !(result[msg.chat.id].formCompleted)) {
      if (!result[msg.chat.id].formCompleted) {
        console.log(true)
      }
      console.log(!result[msg.chat.id].formCompleted)
      result[msg.chat.id].finalquestion = messageText;
      result[msg.chat.id].formCompleted = true;
      await bot.sendMessage(msg.chat.id, '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É, –º—ã –∏–∑—É—á–∏–º –µ—ë –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏.')
      return bot.sendMessage(resultChatId, `
        –ò–º—è: ${result[msg.chat.id].name},
        –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${result[msg.chat.id].phoneNumber}, 
        –ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è: ${result[msg.chat.id].howContact.phone ? '–ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É' : result[msg.chat.id].howContact.messenger},
        –í–æ–ø—Ä–æ—Å: ${result[msg.chat.id].finalquestion}
      `)
    }
    if (result[msg.chat.id].formCompleted) {
      await bot.sendMessage(msg.chat.id, '–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –Ω–∞–∂–º–∏—Ç–µ /start')
    }
  }

})

bot.on('callback_query', async msg => {
  const buttonText = msg.data;
  if (msg.message.chat.id in result) {
    if (buttonText === 'callme') {
      result[msg.message.chat.id].howContact.phone = true;
      await bot.sendMessage(msg.message.chat.id, '–û–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ –≤–∞—à –≤–æ–ø—Ä–æ—Å / —á—Ç–æ–±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—å')
    }
    if (buttonText === 'textme') {
      await bot.sendMessage(msg.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä', optionsMessage)
    }
    if (buttonText === 'whatsapp' || buttonText === 'telegram') {
      result[msg.message.chat.id].howContact.messenger = buttonText;
      await bot.sendMessage(msg.message.chat.id, '–û–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ –≤–∞—à –≤–æ–ø—Ä–æ—Å / —á—Ç–æ–±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —É–∑–Ω–∞—Ç—å')
    }
  }
})